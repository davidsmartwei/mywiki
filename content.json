{"pages":[{"title":"About","date":"2018-01-31T09:21:07.910Z","updated":"2018-01-31T09:21:07.910Z","comments":true,"path":"about/index.html","permalink":"http://www.less-is-more.top/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2018-01-31T09:21:07.914Z","updated":"2018-01-31T09:21:07.914Z","comments":true,"path":"categories/index.html","permalink":"http://www.less-is-more.top/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-01-31T09:21:07.922Z","updated":"2018-01-31T09:21:07.922Z","comments":true,"path":"tags/index.html","permalink":"http://www.less-is-more.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"启动流程","slug":"启动流程","date":"2018-04-11T02:39:09.000Z","updated":"2018-04-11T08:23:23.867Z","comments":true,"path":"wiki/启动流程/","link":"","permalink":"http://www.less-is-more.top/wiki/启动流程/","excerpt":"","text":"初衷为了了解从开机到登陆，电脑内部都发生了什么，以便系统出问题时及时纠正 参考资料","categories":[],"tags":[]},{"title":"Hello World","slug":"为我所用/hello-world","date":"2018-04-11T02:12:09.736Z","updated":"2018-02-01T15:35:51.308Z","comments":true,"path":"wiki/为我所用/hello-world/","link":"","permalink":"http://www.less-is-more.top/wiki/为我所用/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. QuickCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 快速启动 菩提本无树，明镜亦非台 菩提本无树，明镜亦非台。 本来无一物，何处惹尘埃！","categories":[{"name":"为我所用","slug":"为我所用","permalink":"http://www.less-is-more.top/categories/为我所用/"}],"tags":[]},{"title":"windows-office激活","slug":"横看当前/windows-office激活","date":"2018-03-11T14:25:21.000Z","updated":"2018-03-13T13:57:58.649Z","comments":true,"path":"wiki/横看当前/windows-office激活/","link":"","permalink":"http://www.less-is-more.top/wiki/横看当前/windows-office激活/","excerpt":"","text":"简介：为了赚点零花钱，在淘宝上尝试卖windows系统和office办公软件的激活码和注册机，以下主要是激活原理： # 参考资料","categories":[{"name":"横看当前","slug":"横看当前","permalink":"http://www.less-is-more.top/categories/横看当前/"}],"tags":[]},{"title":"Git学习笔记","slug":"横看当前/Git学习笔记","date":"2018-03-04T09:55:55.000Z","updated":"2018-03-15T18:15:53.010Z","comments":true,"path":"wiki/横看当前/Git学习笔记/","link":"","permalink":"http://www.less-is-more.top/wiki/横看当前/Git学习笔记/","excerpt":"","text":"Git简介Git是分布式版本控制系统，简单来说就是能记录每次文件的改动，如下图 优点 分布式版本控制：每个人的电脑上都是一个完整的版本库，不用依赖于中央服务器仓库 分支管理：可以在脱机环境下多人同时协作开发 版本控制创建版本库 新建一个空目录 12mkdir learngitcd learngit 初始化 1git init 编辑版本库添加文件到版本库 文件添加到暂存区 1git add readme.txt 提交到当前分支 1git commit -m \"wrote a readme file\" 撤销修改 当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时 1git checkout -- file 当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改 12git reset HEAD file回到情况1 已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库 删除文件 从版本库中删除该文件 12git rm filegit commit -m \"remove file\" 如果工作区被删除，可从版本库恢复文件到最新版本，你会丢失最近一次提交后你修改的内容 1git checkout -- file ​ 查看版本库 查看工作区的状态 1git status 查看工作区与暂存区之间区别 1git diff readme.txt 查看工作区和版本库里面最新版本的区别 1git diff HEAD -- readme.txt 查看从最近到最远的提交日志，以便确定要回退到哪个版本 1git log 不同版本之间穿梭 1git reset --hard HEAD HEAD 当前版本 HEAD^ 上个版本 HEAD^^ 上上个版本 HEAD~100 上100个版本 版本号(只需输入前6位) 相应版本 查看命令历史，以便确定要回到未来的哪个版本 1git reflog Git原理Git跟踪并管理的是修改，而非文件 目录learngit = 工作区 + 版本库(.git目录) HEAD指向当前分支 新建了一个指针叫dev,HEAD指向当前分支在dev 远程仓库&lt;-&gt;本地仓库本地仓库-&gt;远程仓库 关联一个远程库 1git remote add origin git@github.com:用户名/repo-name.git 第一次推送master分支的所有内容 1git push -u origin master 推送最新修改 1git push origin master 本地仓库&lt;-远程仓库 1git clone 仓库地址 分支管理创建及编辑分支 查看分支 1git branch 创建分支 1git branch &lt;name&gt; 切换分支 1git checkout &lt;name&gt; 创建+切换分支 1git checkout -b &lt;name&gt; 合并某分支到当前分支 1git merge &lt;name&gt; 删除分支 1git branch -d &lt;name&gt; 解决分支冲突 当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再git add和git commit，合并完成 查看分支的合并情况 1git log --graph --pretty=oneline --abbrev-commit 分支管理策略 默认模式(fast forward)合并dev分支 1git merge dev 普通模式合并 1git merge --no-ff -m \"merge with no-ff\" dev 注：合并分支时，加上–no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward模式合并就看不出来曾经做过合并 bug分支:临时修复bug 储藏当前工作现场 1git stash bug修复完成后，查看储藏列表 1git stash list 恢复 1234恢复但不删除stash内容git stash apply恢复并且删除stash内容git stash pop 新功能分支 开发一个新feature，最好新建一个分支 丢弃一个没有合并过的分支 1git branch -D &lt;branchname&gt; 多人协作推送push 推送主分支 1git push origin master 推送其他分支 1git push origin dev 推送原则 master分支是主分支，因此要时刻与远程同步 dev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步 bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发 拉取分支到本地 1git pull 在本地创建和远程分支对应的分支，本地和远程分支的名称最好一致 1git checkout -b dev origin/dev 建立本地分支和远程分支的关联(如果git pull提示“no tracking information”) 1git branch --set-upstream branch-name origin/branch-name 解决推送冲突 首先，可以尝试推送自己的修改 1git push origin branch-name 如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并 如果合并有冲突，则解决冲突，并在本地提交 没有冲突或者解决掉冲突后再次推送 1git push origin branch-name 标签管理创建及查看标签tag就是一个让人容易记住的有意义的名字，它跟某个commit id绑在一起 新建一个标签 1git tag &lt;tagname&gt; 查看所有标签 1git tag v1.0 给历史提交的commit id（6224937）打标签 1git tag v0.9 6224937 查看标签信息 1git show v0.9 创建带有说明的标签 1git tag -a v0.1 -m &quot;version 0.1 released&quot; 3628164 用私钥签名一个标签 1git tag -s v0.2 -m &quot;signed version 0.2 released&quot; fec145a 修改标签 删除标签 1git tag -d v0.1 推送标签到远程 1git push origin &lt;tagname&gt; 一次性推送全部尚未推送到远程的本地标签 1git push origin --tags 删除远程标签 先删除本地标签 1git tag -d v0.9 删除远程标签 1git push origin :refs/tags/v0.9 ​ 参考资料 Git教程 Git笔记 常用 Git 命令清单 Git 工作流程 Git 使用规范流程 Git远程操作详解","categories":[{"name":"横看当前","slug":"横看当前","permalink":"http://www.less-is-more.top/categories/横看当前/"}],"tags":[{"name":"git","slug":"git","permalink":"http://www.less-is-more.top/tags/git/"}]},{"title":"shell","slug":"横看当前/linux/个性化配置/shell","date":"2018-02-07T18:03:11.000Z","updated":"2018-02-08T06:13:52.467Z","comments":true,"path":"wiki/横看当前/linux/个性化配置/shell/","link":"","permalink":"http://www.less-is-more.top/wiki/横看当前/linux/个性化配置/shell/","excerpt":"","text":"初衷：为了简单方便的使用shell,以及方便记住众多linux命令 组成：安装fish:Fish 是”the friendly interactive shell”的简称，最大特点就是方便易用。很多其他 Shell 需要配置才有的功能，Fish 默认提供，不需要任何配置。 1sudo apt-get install fish 启动：1fish 功能：彩色显示：12345# 无效命令为红色$ mkd# 有效命令为蓝色$ mkdir 有效路径会有下划线1$ cat ~/somefi 自动建议：Fish 会自动在光标后面给出建议，表示可能的选项，颜色为灰色。 如果采纳建议，可以按下→或Control + F。如果只采纳一部分，可以按下Alt + → 自动补全:输入命令时，Fish 会自动显示匹配的上一条历史记录 如果没有匹配的历史记录，Fish 会猜测可能的结果，自动补全各种输入。比如，输入pyt再按下Tab，就会自动补全为python命令。如果有多个可能的结果，Fish 会把它们都列出，还带有简要介绍. 常用命令配置：1.在/root目录下创建一个文件，例如：sample 2.把所有常用的命令保存在sample中 3.打开/root/.bashrc，加入别名：alias sample=’(cd ~ &amp;&amp; cat sample |grep ‘ 4.当想查找某个命令时，直接输入：sample 命令名) 5.时常把自己常用命令扩充到sample中 参考资料 [Fish shell 入门教程 ](http://www.ruanyifeng.com/blog/2017/05/fish_shell.html) [50个最常用的Unix/Linux命令 ](https://gywbd.github.io/posts/2014/8/50-linux-commands.html#whereis)","categories":[{"name":"横看当前","slug":"横看当前","permalink":"http://www.less-is-more.top/categories/横看当前/"},{"name":"linux","slug":"横看当前/linux","permalink":"http://www.less-is-more.top/categories/横看当前/linux/"},{"name":"个性化配置","slug":"横看当前/linux/个性化配置","permalink":"http://www.less-is-more.top/categories/横看当前/linux/个性化配置/"}],"tags":[{"name":"fish","slug":"fish","permalink":"http://www.less-is-more.top/tags/fish/"}]},{"title":"根目录说明","slug":"横看当前/linux/FHS/根目录说明","date":"2018-02-06T07:29:11.000Z","updated":"2018-02-06T16:41:50.797Z","comments":true,"path":"wiki/横看当前/linux/FHS/根目录说明/","link":"","permalink":"http://www.less-is-more.top/wiki/横看当前/linux/FHS/根目录说明/","excerpt":"","text":"初衷：为了搞明白linux,实现自己的构想。 组成：linux操作系统：内核+系统调用内核：操作系统(Operating System, OS)其实也是一组程序，这组程序的重点在于管理计算机的所有活动以及驱动系统中的所有硬件 系统调用接口:提供一整组开发接口用于应用程序开发 根目录 /：用途：根文件系统的内容必须足以启动、还原、恢复和/或修复系统 要启动系统，根分区上必须存在足以挂载其他分区的内容。这包括工具、配置、引导装载程序信息和其他启动必需的数据。 /usr 、 /opt 和 /var 的设计使得它们可以位于其他的分区或文件系统 要能够恢复和/或修复系统，一位有经验的维护者诊断和重建损坏系统所需要的工具必须放置在根文件系统中 要还原系统，从系统备份(软盘、磁带等等)还原的工具必须放置在根文件系统中 要求：/ 文件夹下要求有如下文件夹或符号链接 文件夹 描述 bin 必需命令的二进制文件 boot 引导加载程序的静态文件 dev 设备文件 etc 主机特定的系统配置 lib 必需的共享库和内核模块 media 可移动媒质的挂载点 mnt 临时挂载一个文件系统用的挂载点 opt 外部应用程序软件包 sbin 必需的系统级二进制文件 srv 本系统所提供服务的数据文件 tmp 临时文件 usr 二级层次结构 var 变量数据 home 用户主文件夹（可选） root root用户的主文件夹(可选) 补充： 让根系统系统尽量小 应用程序任何时候都不能创建或要求在根文件夹下保存特殊文件或子文件夹 详细文档：文件系统层次结构中文翻译版参考资料 [文件系统层次结构标准 ](https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84%E6%A0%87%E5%87%86) [linux系统目录详解（全而易懂） ](http://blog.51cto.com/ctohf/907442) [Linux目录结构 ](http://linux-wiki.cn/wiki/zh-hans/Linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84) [Linux 下各个目录的作用及内容 ](https://cnbin.github.io/blog/2015/06/23/linux-xia-ge-ge-mu-lu-de-zuo-yong-ji-nei-rong/) [Linux文件系统中/bin、/sbin、/usr/bin、/usr/sbin、/usr/local/bin、/usr/local/sbin文件夹的区别是什么？ ](https://www.zhihu.com/question/21265424) [Unix目录结构的来历 ](http://www.ruanyifeng.com/blog/2012/02/a_history_of_unix_directory_structure.html) 鸟哥的linux私房菜","categories":[{"name":"横看当前","slug":"横看当前","permalink":"http://www.less-is-more.top/categories/横看当前/"},{"name":"linux","slug":"横看当前/linux","permalink":"http://www.less-is-more.top/categories/横看当前/linux/"},{"name":"FHS","slug":"横看当前/linux/FHS","permalink":"http://www.less-is-more.top/categories/横看当前/linux/FHS/"}],"tags":[{"name":"文件层次系统","slug":"文件层次系统","permalink":"http://www.less-is-more.top/tags/文件层次系统/"}]},{"title":"百度云满宽带下载","slug":"横看当前/电影下载/百度云满宽带下载","date":"2018-02-03T12:44:18.000Z","updated":"2018-03-13T16:30:41.075Z","comments":true,"path":"wiki/横看当前/电影下载/百度云满宽带下载/","link":"","permalink":"http://www.less-is-more.top/wiki/横看当前/电影下载/百度云满宽带下载/","excerpt":"初衷：为了看电影，需要保存在百度云盘并下载，但是在客户端下载如龟速。 组成：下载软件：IDM多线程下载软件，最大可支持32个，针对百度云下载效果很好。下载地址及破解 为了百度云盘直接地址：baidudl：打开百度网盘网页，可直接获取其最初地址。把它安装在chrome浏览器中","text":"初衷：为了看电影，需要保存在百度云盘并下载，但是在客户端下载如龟速。 组成：下载软件：IDM多线程下载软件，最大可支持32个，针对百度云下载效果很好。下载地址及破解 为了百度云盘直接地址：baidudl：打开百度网盘网页，可直接获取其最初地址。把它安装在chrome浏览器中 问题：资源下到一半或以后提示输入用户名 分析：这是百度的地址过期了，百度真实的下载链接是有效期限的，在属性里更新一下地址就可以了. 具体操作：打开IDM，右键下载的文件，刷新一下下载地址，会出现一个对话框，不用管它，再找到那个文件原始下载地址，点击下载，就可以继续下载了 tip: glink与hlink区别 百度云盘离线下载通过离线下载秒传到云盘，然后再利用IDM下载到本地。 支持BT种子支持磁力链接、http/https/ftp/电驴(ed2k)参考资料 IDM吧分享 为什么用idm下载百度网盘资源下到一半或以后提示输入用户名","categories":[{"name":"横看当前","slug":"横看当前","permalink":"http://www.less-is-more.top/categories/横看当前/"},{"name":"电影下载","slug":"横看当前/电影下载","permalink":"http://www.less-is-more.top/categories/横看当前/电影下载/"}],"tags":[{"name":"idm","slug":"idm","permalink":"http://www.less-is-more.top/tags/idm/"}]},{"title":"禁止博客复制及右键功能","slug":"横看当前/JS/禁止博客复制及右键功能","date":"2018-02-02T14:06:13.000Z","updated":"2018-03-11T14:28:08.687Z","comments":true,"path":"wiki/横看当前/JS/禁止博客复制及右键功能/","link":"","permalink":"http://www.less-is-more.top/wiki/横看当前/JS/禁止博客复制及右键功能/","excerpt":"初衷：保护自己的文章不被摘抄采集，略微防止技术小白/小牛 操作：方法1：在body中加入以下代码1234&lt;/head&gt;&lt;body oncontextmenu=&quot;return false&quot; onselectstart=&quot;return false&quot;&gt;&lt;/body&gt;&lt;/html&gt;","text":"初衷：保护自己的文章不被摘抄采集，略微防止技术小白/小牛 操作：方法1：在body中加入以下代码1234&lt;/head&gt;&lt;body oncontextmenu=&quot;return false&quot; onselectstart=&quot;return false&quot;&gt;&lt;/body&gt;&lt;/html&gt; 破解：在浏览器页面打开控制台（F12），console中输入：12document.body.oncontextmenu=&quot;return true&quot;;document.body.onselectstart=&quot;return true&quot;; 方法2：插入script脚本12&lt;!--禁止复制--&gt; &lt;script type=&quot;text/Javascript&quot;&gt; document.onselectstart=function(e)&#123;return false;&#125;; &lt;/script&gt;&lt;!--禁止复制--&gt; &lt;script type=&quot;text/Javascript&quot;&gt; document.onselectstart=function(e)&#123;return false;&#125;; &lt;/script&gt; 破解原理：进入控制台，打开网页的source,搜索oncontextmenu和onselectstart，把它从false变为true. 方法3：强力推荐安装chrome插件Enable Copy，让你欲罢不能。 参考资料 开发网站为“禁止复制”“禁用右键功能”(易被破解) document.body.oncontextmenu=”return true”;document.body.onselectstart=”return true”;","categories":[{"name":"横看当前","slug":"横看当前","permalink":"http://www.less-is-more.top/categories/横看当前/"},{"name":"JS","slug":"横看当前/JS","permalink":"http://www.less-is-more.top/categories/横看当前/JS/"}],"tags":[{"name":"js","slug":"js","permalink":"http://www.less-is-more.top/tags/js/"}]},{"title":"redmi 4A刷机","slug":"横看当前/刷机/redmi-4A刷刷机","date":"2018-02-02T04:37:27.000Z","updated":"2018-02-05T15:39:08.811Z","comments":true,"path":"wiki/横看当前/刷机/redmi-4A刷刷机/","link":"","permalink":"http://www.less-is-more.top/wiki/横看当前/刷机/redmi-4A刷刷机/","excerpt":"","text":"初衷：对自带系统不满，垃圾广告太多，许多系统自带应用不需要却无法删除,无法获得最高权限。刷机可以更好的使用Google 刷机方式卡刷： 手动导入安装包 刷入twrp模式：adb recovery模式： 小米助手(只能刷官方rom) 线刷： fastboot模式： 小米助手 fastboot模式：MiPhone 卡刷包和线刷包的区别 线刷一般是手机生产厂商所采取的一种升级方式，针对智能手机系统问题或非硬件损坏的手机故障来刷写固件，替换和覆盖各个分区所有可能被修改或者损坏的文件，使手机功能恢复正常。通过数据线连接电脑来进行刷机，系统底包，一般是 tg 压缩文件，里面是一大堆 img 文件，某些底包里也有文件夹。线刷一般是指厂商官方所采取的刷机、升级方式，主要是用来刷官方固件。 卡刷就是用SD卡作为储存介质来存放ROM文件（手机操作系统文件），本质是对系统文件替换的过程，不会重新刷写整个分区，只是替换部分系统分区文件来实现对手机内软件版本升级或更换第三方操作系统。即rom 包，一般是一个 zip 压缩文件，里面有 system 文件夹和其他一两个文件夹。卡刷一般是在recovery里进行的，卡刷一般是把固件或者升级包拷贝到SD卡或手机中进行刷机、升级操作。 卡刷包肯定是.zip压缩格式。 打开卡刷包后里面一般都会有 system 和 META-INF 、boot.img(内核)等文件与文件夹。 详细操作：卡刷：安全(.zip文件)手动导入： 导入安装包(.zip文件)到手机中，依次点击：设置 -&gt;我的设备-&gt; MIUI版本 -&gt; 三个点(右上角) -&gt; 手动选择安装包 小米助手： 进入recovery模式(设置 -&gt;我的设备-&gt; MIUI版本 -&gt; 三个点(右上角) -&gt; 重启到恢复模式或开机的时候一直按住电源键+音量UP键) ADB+TWRP： 下载win版adb客户端，以及redmi 4A机型TWRP文件，abd是电脑与手机沟通的桥梁，twrp类似于修复window时的PE系统。通过使用adb,把twrp安装在手机上。最新版TWRP下载地址，注意：一定要下载你的设备对应的twrp版本. 线刷：彻底，可救砖(.tgz文件)小米助手：进入fastboot模式(开机的时候一直按住电源键+音量down键)，选择线刷。 MiPhone：下载线刷包(.tgz等压缩文件)，进入fastboot模式(按住电源键+音量DOWN键)，打开miphone.exe,连接手机，导入线刷包。 刷机过程：解锁手机 可能出于安全考虑，锁定手机，但是只能使用官方发布的国内稳定版及开发版，广告，绑定一大堆。 有root权限，可刷官方发布的国外稳定版、开发版及第三方安装包，好处是广告少，可删除一些不必要的组件及系统应用。 解锁流程：1.申请解锁2.小米手机解BL锁详细教程 安装twrp：1.打开手机usb调试（不断点击“MIUI版本”，开启“开发者选项”），通过usb线连接电脑. 2.解压adb文件，调用cmd到adb目录中， 3.输入adb reboot bootloader，手机进入fastboot模式，输入fastboot flash recovery twrp.img，导入twrp.img文件，输入fastboot reboot，重启手机。 电脑传文件到手机adb push 文件名 手机存放位置。例如：1adb push aaa/contacts_app.db /sdcard/ 手机传文件到电脑adb pull 手机上的文件名 当前目录。例如：1adb pull /sdcard/1222073679.png adb pull 手机上的文件夹 当前目录某个文件夹。例如：1adb pull sdcard/360/ 360/ 导入安装包： 国际版 线刷包 欧洲版 必备工具刷入谷歌框架：安装包：opengapps详细教程：opengapps+twrp 为了最高权限(supersu)root的原理： 把所有者为root的su文件放入系统文件/system/bin、/sbin等目录下，放入之后就拥有了root权限.安装包： 刷入supersu 参考资料： 安卓的卡刷包和线刷包有何区别？线刷包可以卡刷麽？ 好马配好鞍，安装谷歌服务框架的正确姿势","categories":[{"name":"横看当前","slug":"横看当前","permalink":"http://www.less-is-more.top/categories/横看当前/"},{"name":"刷机","slug":"横看当前/刷机","permalink":"http://www.less-is-more.top/categories/横看当前/刷机/"}],"tags":[{"name":"redmi4A","slug":"redmi4A","permalink":"http://www.less-is-more.top/tags/redmi4A/"}]},{"title":"MyWiki构建过程","slug":"横看当前/hexo/MyWiki构建过程","date":"2018-02-01T08:05:02.000Z","updated":"2018-04-11T08:45:53.733Z","comments":true,"path":"wiki/横看当前/hexo/MyWiki构建过程/","link":"","permalink":"http://www.less-is-more.top/wiki/横看当前/hexo/MyWiki构建过程/","excerpt":"初衷：知识积累：维基百科，google书签，印象笔记，知乎，简书，灵感等知识整理：建立个人wiki知识管理系统，分类和整理零碎知识个人见解：博客，表达自己的感悟及理解 Wiki安装：主题安装：wikitten","text":"初衷：知识积累：维基百科，google书签，印象笔记，知乎，简书，灵感等知识整理：建立个人wiki知识管理系统，分类和整理零碎知识个人见解：博客，表达自己的感悟及理解 Wiki安装：主题安装：wikitten 选择wiki知识管理系统wikitten优点： 双栏 界面简洁 有纵深，侧边可展开显条目标题 支持Markdown书写 全文搜素 可添加文章 安装hexo主题hexo-theme-Wikitten1.进入hexo站点文件夹，克隆主题到themes/路径下12cd your-hexo-directorygit clone https://github.com/zthxxx/hexo-theme-Wikitten.git themes/Wikitten 2.覆盖站点目录中一些默认页面模板12cp -rf themes/Wikitten/_source/* source/cp -rf themes/Wikitten/_scaffolds/* scaffolds/ 3.重命名主题中的 _config.yml.example 到 _config.yml，然后可以使用配置文件配置主题1cp -f themes/Wikitten/_config.yml.example themes/Wikitten/_config.yml 站点配置修改站点 _config.yml 文件中的 theme 选项为 Wikitten 插件安装：全文搜索(hexo-generator-json-content)安装：1npm install hexo-generator-json-content --save 配置：在站点配置文件_config.yml中添加1234567jsonContent: ignore: - path/to/a/page - url/to/one/post - an-entire-category - specific.file - .ext # a file extension 爬虫抓取(hexo-generator-sitemap)安装：1npm install hexo-generator-sitemap --save 配置：在站点配置文件_config.yml中添加12sitemap: path: sitemap.xml 显示层的文章统一放在wiki文件夹配置：在站点配置文件_config.yml中添加1permalink: wiki/:title/ 建立多层分类(根据文章目录)安装：1npm install --save hexo-directory-category ###显示访客统计及页面访问量 配置 安装脚本 1&lt;script async src=\"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"&gt;&lt;/script&gt; 打开themes/Wikitten/layout/common/head.ejs，添加上述的脚本即可 安装标签 1234&lt;br&gt;&lt;span id=\"busuanzi_container_page_pv\"&gt;&lt;i class=\"fa fa-eye\"&gt;&lt;/i&gt; &lt;span id=\"busuanzi_value_page_pv\"&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;|&amp;nbsp;&lt;span id=\"busuanzi_container_site_uv\"&gt;&lt;i class=\"fa fa-user\"&gt;&lt;/i&gt; &lt;span id=\"busuanzi_value_site_uv\"&gt;&lt;/span&gt;&lt;/span&gt; 打开themes/Wikitten/layout/common/footer.ejs，添加上述的脚本即可 部署到Github建立自己的主页个人主页 每个GitHub帐号下只能有1个个人主页repo 命名必须是/.github.io的形式，例如我的个人主页davidsmartwei/davidsmartwei.github.io 项目主页 可以有不限数量的项目主页repo 项目主页的GitHub二级域名为.github.io/，命名没有限制，例如我的项目主页davidsmartwei/mywiki 为了绑定域名与Github page在阿里云里购买一个域名，域名解析如下图 为了Github绑定域名在自己网站项目repo的根目录添加CNAME1www.less-is-more.top tip: 如果是直接在GitHub网页上添加文件的话，会遇到一个问题就是在通过hexo g -d之后hexo会把根目录下的CNAME文件删除。所以要把CNAME文件添加到/source目录下，这样hexo g -d之后hexo会自动把CNAME复制到/puclic目录下然后将/public路径下的内容进行复制并push到远程master分支的根目录下 sublime text可视化编辑Sublime安装LiveReload插件1.打开Package Control官网2.复制代码到sublime中运行3.按住shift+ctrl+p -&gt; Package Control:Install Package -&gt; enter 配置：方法1：过用户自定义配置来开启Preferences &gt; Package Settings &gt; LiveReload &gt; Settings User1&#123;&quot;enabled_plugins&quot;: [&quot;SimpleReloadPlugin&quot;,&quot;SimpleRefresh&quot;]&#125; 方法2：通过控制台命令来开启123451. Ctrl+Shift+P2. LiveReload: Enable/disableplugins3. Enable - Simple Reload Chrome浏览器安装LiveReload插件tip: 接着右键单击选择管理扩展程序，把允许访问网址文件这一选项勾选上 基本操作：站内链接：12345678// /2015/01/16/hello-world/&#123;% post_path hello-world %&#125;// &lt;a href=&quot;/2015/01/16/hello-world/&quot;&gt;Hello World&lt;/a&gt;&#123;% post_link hello-world %&#125;// &lt;a href=&quot;/2015/01/16/hello-world/&quot;&gt;Custom Title&lt;/a&gt;&#123;% post_link hello-world Custom Title %&#125; eg: 为了页面内跳转(锚点)eg:top to 插件安装 hexo new跳转打开sublime在 Hexo 目录下的 scripts 目录（若没有，则新建一个）中创建一个 JavaScript 脚本opensubl.js，监听 hexo new 这个动作。并在检测到 hexo new 之后，执行编辑器打开的命令123456var exec = require(&apos;child_process&apos;).exec;// Hexo 3.xhexo.on(&apos;new&apos;, function(data)&#123; exec(&apos;start &quot;&quot; &quot;C:/Program Files/Sublime Text 3/sublime_text.exe&quot; &apos; + data.path);&#125;); 参考资料: 用 Hexo 做个人 Wiki 知识管理系统 一个仿 Wikitten 样式的 Hexo 个人 wiki 系统主题 Hexo博客常用插件及用法 单个GitHub帐号下添加多个GitHub Pages的相关问题 GitHub Pages绑定顶级域名的方法 Hexo框架下给博客插入本地图片 Sublime Text 3 配置Live​Reload实时刷新网页 hexo的站内链接问题 在 hexo new 之后立即打开新建的 Markdown 文稿 搞定你的网站计数","categories":[{"name":"横看当前","slug":"横看当前","permalink":"http://www.less-is-more.top/categories/横看当前/"},{"name":"hexo","slug":"横看当前/hexo","permalink":"http://www.less-is-more.top/categories/横看当前/hexo/"}],"tags":[{"name":"wikitten","slug":"wikitten","permalink":"http://www.less-is-more.top/tags/wikitten/"},{"name":"github","slug":"github","permalink":"http://www.less-is-more.top/tags/github/"}]},{"title":"Hello World","slug":"纵观古今/hello-world","date":"2018-01-31T07:50:13.004Z","updated":"2018-02-01T15:35:51.308Z","comments":true,"path":"wiki/纵观古今/hello-world/","link":"","permalink":"http://www.less-is-more.top/wiki/纵观古今/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. QuickCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 快速启动 菩提本无树，明镜亦非台 菩提本无树，明镜亦非台。 本来无一物，何处惹尘埃！","categories":[{"name":"纵观古今","slug":"纵观古今","permalink":"http://www.less-is-more.top/categories/纵观古今/"}],"tags":[]},{"title":"Hexo安装及部署到github","slug":"横看当前/hexo/hexo安装","date":"2017-05-30T06:04:23.000Z","updated":"2018-02-05T15:39:33.543Z","comments":true,"path":"wiki/横看当前/hexo/hexo安装/","link":"","permalink":"http://www.less-is-more.top/wiki/横看当前/hexo/hexo安装/","excerpt":"架构图: 解读:github：它就是一个服务器，专门存放生成的静态文件","text":"架构图: 解读:github：它就是一个服务器，专门存放生成的静态文件 hexo：类似于wordpress,是博客内容的载体或叫平台，组成文件有以下 deploy：执行hexo deploy命令部署到GitHub上的内容目录 public：执行hexo generate命令，输出的静态网页内容目录 scaffolds：layout模板文件目录，其中的md文件可以添加编辑 scripts：扩展脚本目录，这里可以自定义一些javascript脚本 source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。 _drafts：草稿文章 _posts：发布文章 themes：主题文件目录 _config.yml：全局配置文件，大多数的设置都在这里 package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮 生成命令：把用户资源文件转化为静态HTML文件1hexo generate 部署命令：把静态HTML文件发送到GitHub服务器的仓库中（repository）1hexo deploy 外网如何访问GitHub中的静态HTML文件：github仓库命名规则: github账号名.github.io 例如我的仓库为davidsmartwei.github.io，为什么这么命名呢，因为你可以通过在浏览器里输入 https://davidsmartwei.github.io/ 找到存放在github服务器上的静态HTML文件，通过里面的文件进而生成博客界面。 hexo安装：(在window系统)准备环境：安装Git安装Node.js安装hexo：任意位置点击鼠标右键，选择Git bash,输入npm命令1npm install -g hexo 生成项目： 新建一个喜爱的文件夹（如D:\\hexo），在D:\\hexo内点击鼠标右键，选择Git bash（作用是切换git bash工作目录到D:\\hexo），输入以下命令自动在该文件夹建立网站所需要的所有文件 1hexo init 安装依赖包 1npm install 本地查看（通过搭建本地服务器server查看博客） 安装server 1npm install hexo -server -save 生成静态HMTL文件及发送到本地服务器 12hexo generatehexo server 在浏览器中输入localhost:4000即可预览到博客，但是目前外网是访问不了博客，因为该博客只存放在本地，要想通过外网访问，需要把静态HMTL文件发送到github服务器上，如上解读所示。 部署到Github:创建github并建立仓库仓库命名规则： 账号.github.io eg:davidsmartwei.github.io 生成SSH密匙本地与github建立数据传输联系需要ssh密匙1ssh-keygen -t rsa -C “你的邮箱地址”，按3个回车，密码为空 邮箱地址为你在注册github时绑定的邮箱 在GitHub上添加SSH密钥1.在本地找到有步骤5生成的两个文件id_rsa（私匙）和id_rsa.pub（公匙）2.打开id_rsa.pub并复制里面的全部内容到GitHub上。settings—&gt;SSH and GPG keys—&gt;New SSH key 重点配置_config.yml使得连接到GitHub打开_config.yml，翻到最下面，改成我这样子的，1234deploy:type: gitrepository: git@github.com:davidsmartwei/davidsmartwei.github.io.gitbranch: master 注意：” : “后面要有空格，其中把davidsmartwei改为你的GitHub账号名 安装deploy1npm install hexo-deployer-git -save 完整测试123hexo cleanhexo generatehexo deploy 如出现以下提示，则说明部署成功1[info] Deploy done: git 现在就可以通过外网在浏览器里输入 https://davidsmartwei.github.io 访问博客","categories":[{"name":"横看当前","slug":"横看当前","permalink":"http://www.less-is-more.top/categories/横看当前/"},{"name":"hexo","slug":"横看当前/hexo","permalink":"http://www.less-is-more.top/categories/横看当前/hexo/"}],"tags":[{"name":"hexo install","slug":"hexo-install","permalink":"http://www.less-is-more.top/tags/hexo-install/"}]}]}